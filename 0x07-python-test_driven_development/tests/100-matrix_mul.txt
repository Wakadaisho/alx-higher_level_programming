>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

# POSITIVE TEST CASES

>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]
>>> print(matrix_mul([[1, 2]], [[3.0, 4.0], [5, 6.0]]))
[[13.0, 16.0]]

# NEGATIVE TEST CASES

>>> matrix_mul()											# no args
Traceback (most recent call last):
  ...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> matrix_mul([[1,2,3]])									# no second arg
Traceback (most recent call last):
  ...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'
>>> matrix_mul("matrix", [[1, 2], [3, 4]])					# bad first arg (wrong type)
Traceback (most recent call last):
  ...
TypeError: m_a must be a list
>>> matrix_mul([[1, 2], [3, 4]], 123)						# bad second arg (wrong type)
Traceback (most recent call last):
  ...
TypeError: m_b must be a list
>>> matrix_mul([["1", "2"], [3, 4]], [[1,2],[3,4]])			# bad first arg (wrong type, inner list)
Traceback (most recent call last):
  ...
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[1,2],[3, 4]],[["1", "2"], [3, 4]])			# bad second arg (wrong type, inner list)
Traceback (most recent call last):
  ...
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[]], [[1,2], [3,4]])						# bad first arg (empty matrix I)
Traceback (most recent call last):
  ...
ValueError: m_a can't be empty
>>> matrix_mul([], [[1,2], [3,4]])							# bad first arg (empty matrix II)
Traceback (most recent call last):
  ...
ValueError: m_a can't be empty
>>> matrix_mul([[1,2], [3,4]], [[]])						# bad second arg (empty matrix I)
Traceback (most recent call last):
  ...
ValueError: m_b can't be empty
>>> matrix_mul([[1,2], [3,4]], [])							# bad second arg (empty matrix II)
Traceback (most recent call last):
  ...
ValueError: m_b can't be empty
>>> matrix_mul([[1,2],[1,2,3]], [[1,2],[3,4]])				# unequal row lengths arg 1
Traceback (most recent call last):
  ...
TypeError: each row of m_a must be of the same size
>>> matrix_mul([[1,2],[3,3]], [[1,2,2],[3,4]])				# unequal row lengths arg 2
Traceback (most recent call last):
  ...
TypeError: each row of m_b must be of the same size
>>> matrix_mul([[1,2], [3, 4]], [[1,2]])					# incompatible matrix dimensions
Traceback (most recent call last):
  ...
ValueError: m_a and m_b can't be multiplied
