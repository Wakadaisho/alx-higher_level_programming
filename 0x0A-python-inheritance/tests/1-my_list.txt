>>> MyList = __import__('1-my_list').MyList


# POSITIVE TEST CASES
>>> my_list = MyList()
>>> print(my_list)
[]
>>> my_list.print_sorted()
[]
>>> my_list = MyList([6])
>>> print(my_list)
[6]
>>> my_list.print_sorted()
[6]
>>> my_list = MyList({})
>>> my_list = MyList(())
>>> my_list = MyList([6])
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[6, 1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5, 6]
>>> print(my_list)
[6, 1, 4, 2, 3, 5]

# NEGATIVE TEST CASES
>>> my_list = MyList(3.4)
Traceback (most recent call last):
...
TypeError: 'float' object is not iterable
>>> my_list = MyList(3)
Traceback (most recent call last):
...
TypeError: 'int' object is not iterable
>>> my_list = MyList(True)
Traceback (most recent call last):
...
TypeError: 'bool' object is not iterable
>>> my_list = MyList('a')
>>> my_list.append(1)
>>> my_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'int' and 'str'
>>> my_list = MyList([1])
>>> my_list.append('a')
>>> my_list.print_sorted()
Traceback (most recent call last):
...
TypeError: '<' not supported between instances of 'str' and 'int'
